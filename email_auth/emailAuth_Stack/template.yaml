AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: SAM Template
Globals:
  Function:
    Timeout: 30
Resources:
  PostSignup:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostSignup
      CodeUri: PostSignup/
      Runtime: nodejs14.x
      Environment:
        Variables:
          userinfoTable:
            Ref: UserTabel
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - DynamoDBCrudPolicy:
            TableName:
              Ref: UserTabel
      Handler: app.lambdaHandler
  UserTabel:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: UserTabel
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
  emailAuthPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
          - PostSignup
          - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - AuthUserPool
          - Arn
      Action: lambda:InvokeFunction
  AuthUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: AuthUserPool
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      LambdaConfig:
        PostConfirmation:
          Fn::GetAtt:
            - PostSignup
            - Arn
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true
  AuthUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: AuthUserPool
      AllowedOAuthFlows:
        - implicit
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - phone
        - email
        - openid
        - profile
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://www.google.com
      ClientName: AuthUserPoolClient
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
  emailAuthRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  Fn::Sub: arn:aws:lambda:*:${AWS::AccountId}:function:*
          PolicyName: LambdaFunctionInvocation
      RoleName: emailAuthRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
  loginapi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: loginapi
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: loginapi_apigateway/swagger.yaml
